name: Build App

on:
  push:
    # Trigger only for main branch.
    branches: [ main, master ]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Setup Gradle Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # Get the app source
      - name: Get the source
        uses: actions/checkout@v3

      - name: Setup JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'  # Using Java 17 instead of Java 25 to avoid compatibility issues
          distribution: 'temurin'
          cache: gradle

      # Set up Android SDK
      - name: Setup Android SDK
        uses: android-actions/setup-android@v2

      # Clean up any backup files that might interfere with the build
      - name: Clean up backup files
        run: |
          # Remove any backup files that might interfere with the build
          find . -name "*.bak" -type f -delete || true
          find . -name "*~" -type f -delete || true
          
          # Fix any existing gradlew file to ensure proper Unix line endings
          sed -i 's/\r$//' gradlew
          chmod +x gradlew

      # Check if google-services.json exists and handle accordingly
      - name: Check for google-services.json
        run: |
          if [ -f "app/google-services.json" ]; then
            echo "Google services file found"
            echo "GOOGLE_SERVICES_FOUND=true" >> $GITHUB_ENV
          else
            echo "Google services file not found - will attempt to build with Firebase dependencies disabled"
            echo "GOOGLE_SERVICES_FOUND=false" >> $GITHUB_ENV
          fi

      # If google-services.json is not found, we'll try to build with a modified approach
      - name: Prepare build configuration
        run: |
          if [ "$GOOGLE_SERVICES_FOUND" = "false" ]; then
            echo "Creating a temporary build configuration without Google Services plugin"
            # Create a backup of the original file
            cp app/build.gradle.kts app/build.gradle.kts.bak
            
            # Remove or comment out the Google Services plugin line
            sed -i 's/id("com.google.gms.google-services")/# &/' app/build.gradle.kts
            sed -i 's/id("com.google.firebase.crashlytics")/# &/' app/build.gradle.kts
            
            # Also comment out Firebase dependencies if needed
            sed -i 's/implementation("com.google.firebase:firebase-analytics")/# &/' app/build.gradle.kts
            sed -i 's/implementation(libs.firebase.config)/# &/' app/build.gradle.kts
            sed -i 's/implementation(libs.firebase.auth)/# &/' app/build.gradle.kts
            sed -i 's/implementation("com.google.firebase:firebase-crashlytics-ndk")/# &/' app/build.gradle.kts
            sed -i 's/implementation(libs.firebase.firestore)/# &/' app/build.gradle.kts
          fi

      # Clean and compile the apk
      - name: Clean and Generate Debug APK
        run: |
          ./gradlew clean assembleDebug --warning-mode=all

      # Upload the action artifact
      - name: Upload Debug APK (artifact)
        uses: actions/upload-artifact@v4
        with:
          name: debug-apk
          path: app/build/outputs/apk/debug/app-debug.apk

      # Generate Release APK (without signing for now)
      - name: Generate Release APK
        run: |
          ./gradlew clean assembleRelease --warning-mode=all

      # Restore original build file
      - name: Restore original build file
        if: env.GOOGLE_SERVICES_FOUND == 'false'
        run: |
          if [ -f "app/build.gradle.kts.bak" ]; then
            mv app/build.gradle.kts.bak app/build.gradle.kts
          fi

      # Upload Release APK
      - name: Upload Release APK (artifact)
        uses: actions/upload-artifact@v4
        with:
          name: release-apk
          path: app/build/outputs/apk/release/app-release.apk